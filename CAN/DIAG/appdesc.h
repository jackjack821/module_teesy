/* -----------------------------------------------------------------------------
  Filename:    appdesc.h
  Description: Interface towards the application used by CANdesc.
                
                Manufacturer: BAIC
                EcuDocFile:   D:\HVACProject\Geely\KC_2\Gney\Geely_KC-2_009.cdd
                Variant:      CommonDiagnostics

  Generated by CANdelaGen, Thu Jul 07 18:05:12 2016
 
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2012 by Vector Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vector Informatik 
  GmbH.
  
  Vector Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vector Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__APPDESC_H__)
#define __APPDESC_H__

#include "RTE.h"
#include "RDC.h"
#include "AIRD.h"
#include "RFA.h"
#include "MAC.h"
#include "BCTL.h"
#include "DTC.h"
#include "LCD.h"
#include "DIM.h"
#include "MMI.h"
#include "DCM.h"
//#include "ICT.h"
#include "OAT.h"
#include "EVAP.h"
#include "Accc.h"
#include "Aqs.h"
#include "Accc_interface.h"
#include "DIM_interface.h"
#include "CTS_Export.h"
/* -----------------------------------------------------------------------------
    &&&~ Configuration switches
 ----------------------------------------------------------------------------- */

#if !defined(__DESC_H__)
# error "Include sequence error! You must include desc.h before appDesc.h."
#endif



/* -----------------------------------------------------------------------------
    &&&~ Preprocessor constants (defines)
 ----------------------------------------------------------------------------- */

/* This magic number provides inter CANdesc generation process consistency check.All CANdesc files must have the same one. */
#define DESC_APPLICATION_INTERFACE_MAGIC_NUMBER                      10035


/* -----------------------------------------------------------------------------
    &&&~ Function prototypes
 ----------------------------------------------------------------------------- */

#if defined (DESC_ENABLE_DEBUG_USER ) || defined (DESC_ENABLE_DEBUG_INTERNAL)
/* Assertion function for better integration support. */
void DESC_API_CALLBACK_TYPE ApplDescFatalError(vuint8 errorCode, vuint16 lineNumber);
#endif

/* If RCR-RP has been forced this confirmation function will notify the application about the transmission result. */
void DESC_API_CALLBACK_TYPE ApplDescRcrRpConfirmation(vuint8 status);
void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSession(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSecurityAccess(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescResethardReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescResetsoftReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescClearFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadNumberFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_DTC_by_status_maskFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadEnvironmentDataFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_supported_DTCFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteBackup_configuration_information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteECUFunctionConfiguration(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteVehicleNetworkConfigurationDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteVehicle_Name(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteVehicleIdentificationNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteSystemNameOrEngineType(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteRepairShopCodeOrTesterSerialNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteProgrammingOrConfigurationDate(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteECUInstallationDateDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetDriverTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlDriverTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetLoopmode(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlLoopmode(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetIONControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlIONControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetBlower_Level(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlBlower_Level(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetModeActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlModeActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetRearDefrostControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlRearDefrostControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetCompressorControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlCompressorControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetPassengerTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlPassengerTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_ResetTelltalePWMDutyControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControlTelltalePWMDutyControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartSetUserSettingToDefalut(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartECUSelftest(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_DTC_Setting_onControlDTCSetting(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescControl_DTC_Setting_offControlDTCSetting(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescPostResethardReset(vuint8 status);
void DESC_API_CALLBACK_TYPE ApplDescPostResetsoftReset(vuint8 status);
/* Application condition checks */
void DESC_API_CALLBACK_TYPE ApplDescCheckCommCtrl(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescOemCommControlInfo *commControlInfo);

#if defined (DESC_ENABLE_COMM_CTRL_SUBNET_SUPPORT)
void DESC_API_CALLBACK_TYPE ApplDescSetCommMode(DescOemCommControlInfo *commControlInfo);
#endif

#if defined (DESC_ENABLE_RX_COMM_CONTROL)
void DESC_API_CALLBACK_TYPE ApplDescSetCommModeOnRxPath(DescOemCommControlInfo *commControlInfo);
#endif

/* Notification functions */
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationDisable(void);
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationEnable(void);

void DESC_API_CALLBACK_TYPE ApplDescCheckSessionTransition(DescStateGroup newState, DescStateGroup formerState);
/* application function which returns a randomly generated value each time it is called 
 * (e.g. current free running timer value)
 */
void ApplDescSecurityAccessGetSeed(DescSecurityAccessContext* pDescSecurityAccessContext);
/* application function which must evaluate the received key and confirm its validity.
 */
void ApplDescSecurityAccessCheckKey(DescSecurityAccessContext* pDescSecurityAccessContext);

#if defined (DESC_ENABLE_REPORT_ATT_CNTR_STATE)
/* application notification on time expiration */
void ApplDescSecurityAccessOnAttCntrChanged(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescSecAccAttCtrChgEvType chgEv, vuint8 newAttCounter);
#endif

void DESC_API_CALLBACK_TYPE ApplDescReadProgrammingCounter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadProgrammingAttempCounter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDriverTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadInCarTemperature(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadAmbientTemperature(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadEvapTemperature(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadInCarAirQuanlityStatus(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadInCarAirQuanlityValue(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadLoopmode(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadIONControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadACWorkingState(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadBlower_Level(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadModeActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDefrostState(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadRearDefrostControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadCompressorControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadMAXA_CState(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDual_state(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadPassengerTempActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadRecirculationActuator(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDriver_side_Sunload_Value(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadPassenegr_side_Sunload_Value(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadOutSideAirQuanlityStatus(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadOutSideAirQuanlityValue(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadAQSVoltage(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadCoolantTemperature(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadTelltalePWMDutyControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadECUSupplierVoltage(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadKL15status(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadBackup_configuration_information(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadECUFunctionConfiguration(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadVehicleNetworkConfigurationDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadVehicle_Name(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadDiagnosticVersion(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadBootSoftwareIdentification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadActiveDiagnosticSession(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadGeelySparePartNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadVehicleManufacturerECUSoftwareVersionNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadSystemSupplierIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadECUManufacturingDate(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadECUSerialNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadVehicleIdentificationNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadsystemSupplierECUHardwareVersionNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadsystemSupplierECUSoftwareVersionNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadSystemNameOrEngineType(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadRepairShopCodeOrTesterSerialNumber(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadProgrammingOrConfigurationDate(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadECUInstallationDateDataIdentifier(DescMsgContext* pMsgContext);
#if defined (DESC_ENABLE_MULTI_CFG_SUPPORT)
/* Additionaly reject a supported PID (multi ECU configuration) */
DescBool ApplDescIsDataIdSupported(vuint16 pid);
#endif

               



void DIAG_vReset(void);
void DIAG_vMain(void);
void DIAG_vInit(void);
void DIAG_vDeinit(void);
void DIAG_vActive(void);

Std_ReturnType DIAG_NetWorkCf(uint8* Res);
/*this is for uint8 type variables*/
typedef enum DIAG_enu8VarNumbers
{   
	DIAG_nu8SwVersion=0,
	DIAG_nu8KeepAlive,  
	DIAG_nu8EngType,
	DIAG_nu8AQSMount,           
	DIAG_nu8PM25Mount, 
	DIAG_nu8IONMount, 	
	DIAG_nu8RCPMount,
	DIAG_nu8AppRxDisable,
	DIAG_nu8AppTxDisable,/*Added by Yang Shengli,20170715*/
	DIAG_nu8NmRxDisable,/*Added by Yang Shengli,20170715*/
	DIAG_nu8ResetFlag,
	DIAG_nu8SelfTestReq,
	DIAG_nu8Max                   
}DIAG_tenu8VarNumber;
uint8 DIAG_u8GetValue( DIAG_tenu8VarNumber enIndex );



typedef enum Diag_enu8MACCtr
{
    Diag_nu8MACCancleCtr = 0,
	Diag_nu8MACPosDrForce = 0xA1,
    Diag_nu8MACPosDrNormal = 0xA2,
	Diag_nu8MACPosPsForce = 0xA3,
    Diag_nu8MACPosPsNormal = 0xA4,    
	Diag_nu8MACCtrMax
}Diag_tenu8MACCtrVarNum;


typedef enum Diag_enu8AirdCtr
{
    Diag_nu8AirdCancleCtr = 0,
	Diag_nu8AirdPosForce = 0xA1,
    Diag_nu8AirdPosNormal = 0xA2, 
 	Diag_nu8AirdModeStsForce = 0xA3,
    Diag_nu8AirdModeStsNormal = 0xA4,    
	Diag_nu8AirdCtrMax
}Diag_tenu8AirdCtrVarNum;


typedef enum Diag_enu8RfaCtr
{
    Diag_nu8RfaCancleCtr = 0,
	Diag_nu8RfaPosForce = 0xA1,
    Diag_nu8RfaPosNormal = 0xA2, 
	Diag_nu8RfaPercentForce = 0xA3,
    Diag_nu8RfaPercentNormal = 0xA4,     
	Diag_nu8RfaCtrMax
}Diag_tenu8RfaCtrVarNum;

typedef enum Diag_enu8BctlCtr
{
    Diag_nu8BctlCancleCtr = 0,
	Diag_nu8BctlVoltageForce = 0xA1,
    Diag_nu8BctlVoltageNormal = 0xA2, 
    Diag_nu8BctlSpdForce = 0xA3,
    Diag_nu8BctlSpdNormal = 0xA4,
	Diag_nu8BctlCtrMax
}Diag_tenu8BctlCtrVarNum;



typedef enum Diag_enu8AcccCtr
{
    Diag_nu8AcccCancleCtr = 0,
	Diag_nu8AcccActualeqForce = 0xA1,
    Diag_nu8AcccActualReqNormal = 0xA2, 
	Diag_nu8AcccCtrMax
}Diag_tenu8AcccCtrVarNum;

typedef enum Diag_enu8IONCtr
{
    Diag_nu8IONCancleCtr = 0,
	Diag_nu8IONReqForce = 0xA1,
    Diag_nu8IONReqNormal = 0xA2, 
	Diag_nu8PM25ReqForce = 0xA3,
    Diag_nu8PM25ReqNormal = 0xA4,     
	Diag_nu8IONCtrMax
}Diag_tenu8IONCtrVarNum;

typedef enum Diag_enu8DIMCtr
{
    Diag_nu8DIMCancleCtr = 0,  
	Diag_nu8LcdPWMForce = 0xA1,
    Diag_nu8LcdPWMNormal = 0xA2,
	Diag_nu8LedPWMForce = 0xA3,
    Diag_nu8LedPWMNormal = 0xA4,   
	Diag_nu8SymbolPWMForce = 0xA5,
    Diag_nu8SymbolPWMNormal = 0xA6,    
    Diag_nu8RdcLedStatusForce = 0xA7,
    Diag_nu8RdcLedStatusNormal = 0xA8,      
	Diag_nu8DIMCtrMax
}Diag_tenu8DIMCtrVarNum;


typedef enum Diag_enu8DTCCtr
{
    Diag_nu8DTCCancleCtr = 0,
	Diag_nu8DTCSettingCtr = 0xA1,
    Diag_nu8DTCSettingNormal = 0xA2,    
	Diag_nu8DTCCtrMax
}Diag_tenu8DTCCtrVarNum;

typedef enum Diag_enu16IOCtrFreeTimer
{
    Diag_nu16MacPosDrCtrFree,
	Diag_nu16MacPosPsCtrFree,
    Diag_nu16AirdModeStsCtrFree, 
    Diag_nu16RfaPosCtrFree,
    Diag_nu16BctlSpdCtrFree,
    Diag_nu16AcccActualReqCtrFree,
    Diag_nu16LcdPWMCtrFree,
    Diag_nu16LedPWMCtrFree,
    Diag_nu16IonReqCtrFree,
    Diag_nu16RdcReqCtrFree,
    Diag_nu16PM25ReqCtrFree,
   
	Diag_nu16CtrFreeMax
}Diag_tenu16IOCtrFreeTimer;


typedef enum Diag_enu8RdcCtr
{
    Diag_nu8RdcCancleCtr = 0,
	Diag_nu8RdcActualeqForce = 0xA1,
    Diag_nu8RdcActualReqNormal = 0xA2, 
	Diag_nu8RdcCtrMax
}Diag_tenu8RdcCtrVarNum;


#define	DIAG_u8SwVersion    DIAG_au8Array[DIAG_nu8SwVersion]
#define	DIAG_u8KeepAlive    DIAG_au8Array[DIAG_nu8KeepAlive] 
#define	DIAG_u8EngType      DIAG_au8Array[DIAG_nu8EngType]
#define	DIAG_u8AQSMount     DIAG_au8Array[DIAG_nu8AQSMount]        
#define	DIAG_u8PM25Mount    DIAG_au8Array[DIAG_nu8PM25Mount]
#define	DIAG_u8IONMount    DIAG_au8Array[DIAG_nu8IONMount]
#define	DIAG_u8RCPMount     DIAG_au8Array[DIAG_nu8RCPMount]
#define	DIAG_u8AppRxDisable DIAG_au8Array[DIAG_nu8AppRxDisable]




#define Diag_nu16IOCtrFreeTime    (600)/*6S*/


#define Diag_nu16MacDrMaxPos   MAC_au16Group1DrMixAirDoorPositionY[MAC_nDrMixAirDoorPositionY_Len-1]
#define Diag_nu16MacDrMinPos   MAC_au16Group1DrMixAirDoorPositionY[0]
#define Diag_nu16MacPsMaxPos   MAC_au16Group1PsMixAirDoorPositionY[MAC_nDrMixAirDoorPositionY_Len-1]
#define Diag_nu16MacPsMinPos   MAC_au16Group1PsMixAirDoorPositionY[0]
#define Diag_nu16AirdMinPos    AIRD_au16Group1AirdManuPosition_Tbl[0]
#define Diag_nu16AirdMaxPos    AIRD_au16Group1AirdManuPosition_Tbl[AIRD_nAirdManuPositionTbl_Len-1]
#define Diag_nu16RfaMaxPos     RFA_au16GroupRfaPositionY[RFA_nRfaPositionLen-1] 
#define Diag_nu16RfaMinPos     RFA_au16GroupRfaPositionY[0] 



#define Diag_nu32ForceFlag       (0x01000000U)
#define Diag_nu32MacPosDrCtr     (Diag_nu32ForceFlag|((uint32)Diag_nu8MACPosDrForce<<16))
#define Diag_nu32MacPosDrNormal  (Diag_nu32ForceFlag|((uint32)Diag_nu8MACPosDrNormal<<16))
#define Diag_nu32MacPosPsCtr     (Diag_nu32ForceFlag|((uint32)Diag_nu8MACPosPsForce<<16))
#define Diag_nu32MacPosPsNormal  (Diag_nu32ForceFlag|((uint32)Diag_nu8MACPosPsNormal<<16))
#define Diag_nu32AirdPosCtr      (Diag_nu32ForceFlag|((uint32)Diag_nu8AirdPosForce<<16))
#define Diag_nu32AirdPosNormal   (Diag_nu32ForceFlag|((uint32)Diag_nu8AirdPosNormal<<16)) 
#define Diag_nu32AirdModeStsCtr      (Diag_nu32ForceFlag|((uint32)Diag_nu8AirdModeStsForce<<16))
#define Diag_nu32AirdModeStsNormal   (Diag_nu32ForceFlag|((uint32)Diag_nu8AirdModeStsNormal<<16))


#define Diag_nu32RfaPosCtr       (Diag_nu32ForceFlag|((uint32)Diag_nu8RfaPosForce<<16))
#define Diag_nu32RfaPosNormal    (Diag_nu32ForceFlag|((uint32)Diag_nu8RfaPosNormal<<16)) 
#define Diag_nu32RfaPercentCtr       (Diag_nu32ForceFlag|((uint32)Diag_nu8RfaPercentForce<<16))
#define Diag_nu32RfaPercentNormal    (Diag_nu32ForceFlag|((uint32)Diag_nu8RfaPercentNormal<<16)) 

#define Diag_nu32AcccActualReqCtr         (Diag_nu32ForceFlag|((uint32)Diag_nu8AcccActualeqForce<<16))
#define Diag_nu32AcccActualReqNormal      (Diag_nu32ForceFlag|((uint32)Diag_nu8AcccActualReqNormal<<16)) 

#define Diag_nu32BctlVoltageCtr         (Diag_nu32ForceFlag|((uint32)Diag_nu8BctlVoltageForce<<16))
#define Diag_nu32BctlVoltageNormal      (Diag_nu32ForceFlag|((uint32)Diag_nu8BctlVoltageNormal<<16)) 
#define Diag_nu32BctlSpdCtr             (Diag_nu32ForceFlag|((uint32)Diag_nu8BctlSpdForce<<16))
#define Diag_nu32BctlSpdNormal          (Diag_nu32ForceFlag|((uint32)Diag_nu8BctlSpdNormal<<16)) 

#define Diag_nu32IONReqCtr              (Diag_nu32ForceFlag|((uint32)Diag_nu8IONReqForce<<16)) 
#define Diag_nu32IONReqNormal           (Diag_nu32ForceFlag|((uint32)Diag_nu8IONReqNormal<<16)) 
#define Diag_nu32PM25ReqCtr              (Diag_nu32ForceFlag|((uint32)Diag_nu8PM25ReqForce<<16)) 
#define Diag_nu32PM25ReqNormal           (Diag_nu32ForceFlag|((uint32)Diag_nu8PM25ReqNormal<<16)) 

#define Diag_nu32LcdPWMReqCtr           (Diag_nu32ForceFlag|((uint32)Diag_nu8LcdPWMForce<<16)) 
#define Diag_nu32LcdPWMNormal           (Diag_nu32ForceFlag|((uint32)Diag_nu8LcdPWMNormal<<16)) 
#define Diag_nu32LedPWMReqCtr           (Diag_nu32ForceFlag|((uint32)Diag_nu8LedPWMForce<<16)) 
#define Diag_nu32LedPWMNormal           (Diag_nu32ForceFlag|((uint32)Diag_nu8LedPWMNormal<<16)) 
#define Diag_nu32SymbolPWMReqCtr        (Diag_nu32ForceFlag|((uint32)Diag_nu8SymbolPWMForce<<16)) 
#define Diag_nu32SymbolPWMNormal        (Diag_nu32ForceFlag|((uint32)Diag_nu8SymbolPWMNormal<<16)) 
#define Diag_nu32RdcLedStatusForce       (Diag_nu32ForceFlag|((uint32)Diag_nu8RdcLedStatusForce<<16))
#define Diag_nu32RdcLedStatusNormal       (Diag_nu32ForceFlag|((uint32)Diag_nu8RdcLedStatusNormal<<16))

#define Diag_nu32RdcReqCtr      (Diag_nu32ForceFlag|((uint32)Diag_nu8RdcActualeqForce<<16))
#define Diag_nu32RdcReqNormal   (Diag_nu32ForceFlag|((uint32)Diag_nu8RdcActualReqNormal<<16))


#define Diag_nu32DTCSettingCtr           (Diag_nu32ForceFlag|((uint32)Diag_nu8DTCSettingCtr<<16))
#define Diag_nu32DTCSettingNormal          (Diag_nu32ForceFlag|((uint32)Diag_nu8DTCSettingNormal<<16)) 


#if 0  /*20160530,before use RTE*/
#define  Diag_MacForceIOControl_ForceCtrl(Value)   Rte_Call_Ccp_CcpProto_Ccp_MacForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_MacForceIOControl_ForceCtrl(Value)
#define  Diag_RfaForceIOControl_ForceCtrl(Value)   Rte_Call_Ccp_CcpProto_Ccp_RfaForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_RfaForceIOControl_ForceCtrl(Value)
#define  Diag_AirdForceIOControl_ForceCtrl(Value)  Rte_Call_Ccp_CcpProto_Ccp_AirdForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_AirdForceIOControl_ForceCtrl(Value)
#define  Diag_BctlForceIOControl_ForceCtrl(Value)  Rte_Call_Ccp_CcpProto_Ccp_BctlForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_BctlForceIOControl_ForceCtrl(Value)
#define  Diag_AcccForceIOControl_ForceCtrl(Value)  Rte_Call_Ccp_CcpProto_Ccp_AcccForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_AcccForceIOControl_ForceCtrl(Value)
#define  Diag_DtcForceIOControl_ForceCtrl(Value)   DTC_u8ForceIoControl_Write(Value)//Rte_Call_Diag_DtcForceIOControl_ForceCtrl(Value)
#define  Diag_IonForceIOControl_ForceCtrl(Value)   Rte_Call_Ccp_CcpProto_Ccp_IonForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_IonForceIOControl_ForceCtrl(Value)
#define  Diag_DimForceIOControl_ForceCtrl(Value)   Rte_Call_Ccp_CcpProto_Ccp_DimForceIOControl_ForceCtrl(Value)//Rte_Call_Diag_DimForceIOControl_ForceCtrl(Value)
#define  Diag_MmiForceIOControl_ForceCtrl(Value)              (Value)//Rte_Call_DiagWriteMmiForceData_ForceIoControlData(Value)
#define  Diag_LcdForceIOControl_ForceCtrl(Value)   Rte_Call_Diag_DimForceIOControl_ForceCtrl(Value)
#define  Diag_u8RfaDisplay                  RFA_u8GetValue(RFA_nu8Display)//Rte_IRead_Diag_vMain_Diag_RfaDisplay_u8DispInfo()
#define  Diag_u8BctlDisplay                 BCTL_u8GetValue(BCTL_nu8DisplayInfo)//Rte_IRead_Diag_vMain_Diag_BctlDisplay_u8DispInfo()
#define  Diag_u8AirdDisplay                 AIRD_u8GetValue(AIRD_nu8Display)//Rte_IRead_Diag_vMain_Diag_AirdDisplay_u8DispInfo()
#define  Diag_u8MmiModeState                MMI_u8GetValue(MMI_nu8SysState) //MMI_nu8ModeControl)//Rte_IRead_Diag_vMain_Diag_MmiMode_u8Set()
#define  Diag_u8DualState                   MMI_u8GetValue(MMI_nu8DualControl)//Rte_IRead_Diag_vMain_Diag_MmiDualState_u8State()
#define  Diag_u8RdcDisplay                  MMI_u8GetValue(MMI_nRearDefrost)//Rte_IRead_Diag_vMain_Diag_MmiDualState_u8State()

//#define  Diag_u16MixMotorFbAdValueDr()        DCM_enGetU16Value(DCM_nu16AdValueMixDr)//Rte_IRead_Diag_vMain_Diag_DcmMixMotorFbAdValueDr_u16AdValue()
//#define  Diag_u16MixMotorFbAdValuePs()        DCM_enGetU16Value(DCM_nu16AdValueAird)//Rte_IRead_Diag_vMain_Diag_DcmMixMotorFbAdValuePs_u16AdValue()
//#define  Diag_u16RfaMotorFbAdValue()          DCM_enGetU16Value(DCM_nu16AdValueRfa)//Rte_IRead_Diag_vMain_Diag_DcmRfaMotorFbAdValue_u16AdValue()
#define  Diag_u16SunValueDr                 SUN_u16GetValue(SUN_nu16SensorRawValueLeft)//Rte_IRead_Diag_vMain_Diag_SunSensorRawValueDr_u16SunLoad()
#define  Diag_u16SunValuePs                 SUN_u16GetValue(SUN_nu16SensorRawValueRight)//Rte_IRead_Diag_vMain_Diag_SunSensorRawValuePs_u16SunLoad()
#define  Diag_u16AcccRequest                ACCC_u8GetValue(ACCC_nu8AcActualRequest)//Rte_IRead_Diag_vMain_Diag_AcccDisplay_u8DispInfo()
#define  Diag_u8InCarAirQuanlityStatus      LINAPP_u16GetValue(LIN_nu16L_PM25_AirInQLevel)//Rte_IRead_Diag_vMain_Diag_LinAppAirInQLevel_u8IonAirQLevel()
#define  Diag_u8OutSideAirQuanlityStatus    LINAPP_u16GetValue(LIN_nu16L_PM25_AirOutQLevel)//Rte_IRead_Diag_vMain_Diag_LinAppirOutQLevel_u8IonAirQLevel()
#define  Diag_u16InCarAirQuanlityValue      LINAPP_u16GetValue(LIN_nu16L_PM25_InDen)//Rte_IRead_Diag_vMain_Diag_LinAppPM25InDen_u16LinAppPM25Den()
#define  Diag_u16OutSideAirQuanlityValue    LINAPP_u16GetValue(LIN_nu16L_PM25_OutDen)//Rte_IRead_Diag_vMain_Diag_LinAppPM25OutDen_u16LinAppPM25Den()
#define  Diag_u16AQSAdvalue                 AQS_u16GetValue(AQS_nu16SensorAdValue)//Rte_IRead_Diag_vMain_Diag_AqsSensorAdValue_u16AdValue()
#define  Diag_u16BatteryVoltage             0xFF
#define  Diag_u16EvapSensorTemp             EVAP_u16GetValue(EVAP_nu16RawValue)//Rte_IRead_Diag_vMain_Diag_EvapSensorRawValue_u16Temp()
#define  Diag_u16OatSensorTemp              OAT_u16GetValue(OAT_nu16SensorRawValue)//Rte_IRead_Diag_vMain_Diag_OatSensorRawValue_u16Temp()
#define  Diag_u16IctSensorTemp              ICT_u16GetValue(ICT_nu16SensorValue)//Rte_IRead_Diag_vMain_Diag_IctSensorRawValue_u16Temp()
#define  Diag_u16CoolantTempValid           CANAPP_u8GetValue(CANAPP_nu8EngWaterTempVD)//Rte_IRead_Diag_vMain_Diag_CanAppEngWaterTempVD_u8Flag()
#define  Diag_u16CoolantTemp                CANAPP_u8GetValue(CANAPP_nu8EngWaterTemp)//Rte_IRead_Diag_vMain_Diag_CanAppEngWaterTemp_u8Temp()
#define  Diag_u16EngSpd                     CANAPP_u8GetValue(CANAPP_nu8EngSpdVD)//0//Rte_IRead_Diag_vMain_Diag_CanAppEngSpd_u16Speed()
#define  Diag_u16EngSpdValid                CANAPP_u16GetValue(CANAPP_nu16EngineSpeed)//Rte_IRead_Diag_vMain_Diag_CanAppEngSpdVd_u8Flag()
#define  Diag_u16TelltalePWMDuty1           50
#define  Diag_u16TelltalePWMDuty2           50
#define  Diag_u16TelltalePWMDuty3           50
#define  Diag_u16LcdPWMDuty3                100
#define  Diag_u16BatteyVoltage              POW_u8GetValue(POW_nu8BattVoltage) //100 1bit->0.1V
#define  Diag_u8IONCtrState                 MMI_u8GetValue(MMI_nu8IonCtrl)//Rte_IRead_Diag_vMain_Diag_MmiIonCtrl_u8Set()
#define  Diag_u8ClearAllDtc()               DTC_u8ClearAllDtc();

#endif


#define  Diag_MacForceIOControl_ForceCtrl(Value)   (MAC_u8ForceIoControl_Write(Value))
#define  Diag_RfaForceIOControl_ForceCtrl(Value)   (RFA_ForceIoControl_Write(Value))
#define  Diag_AirdForceIOControl_ForceCtrl(Value)  (AIRD_u8ForceIoControl_Write(Value))
#define  Diag_BctlForceIOControl_ForceCtrl(Value)  (BCTL_u8ForceIoControl_Write(Value))
#define  Diag_AcccForceIOControl_ForceCtrl(Value)  (ACCC_u8ForceIoControl_Write(Value))
#define  Diag_DtcForceIOControl_ForceCtrl(Value)   (DTC_u8ForceIoControl_Write(Value))
#define  Diag_IonForceIOControl_ForceCtrl(Value)   ((void)Value)//ION_u8ForceIoControl_Write(Value)
#define  Diag_DimForceIOControl_ForceCtrl(Value)   (DIM_u8ForceIoControl_Write(Value))
#define  Diag_MmiForceIOControl_ForceCtrl(Value)   (MMI_u8ForceIoControl_Write(Value))
#define  Diag_LcdForceIOControl_ForceCtrl(Value)     0// (LCD_u8ForceIoControl_Write(Value))
#define  Diag_AqsForceIOControl_ForceCtrl(Value)   ((void)Value)
#define  Diag_ReDefForceIOControl_ForceCtrl(Value) (RDC_u8ForceIoControl_Write(Value))

#define  Diag_u8RfaDisplay                  RFA_u8GetValue(RFA_nu8Display)//Rte_IRead_Diag_vMain_Diag_RfaDisplay_u8DispInfo()/*Interface OK,20160713*/
#define  Diag_u8BctlDisplay                 BCTL_u8GetValue(BCTL_nu8DisplayInfo)//Rte_IRead_Diag_vMain_Diag_BctlDisplay_u8DispInfo()/*Interface OK,20160713*/
#define  Diag_u8AirdDisplay                 AIRD_u8GetValue(AIRD_nu8Display)//Rte_IRead_Diag_vMain_Diag_AirdDisplay_u8DispInfo()/*Interface OK,20160713*/
#define  Diag_u8MmiModeState                MMI_u8GetValue(MMI_nu8SysState)//Rte_IRead_Diag_vMain_Diag_MmiMode_u8Set() /*Interface OK,20160713*/
#define  Diag_u8DualState                   MMI_u8GetValue(MMI_nu8DualControl)//Rte_IRead_Diag_vMain_Diag_MmiDualState_u8State()/*Interface OK,20160713*/
#define  Diag_u8RdcDisplay                  MMI_u8GetValue(MMI_nRearDefrost)//Rte_IRead_Diag_vMain_Diag_MmiRearDefControl_u8Set()//Rte_IRead_Diag_vMain_Diag_RdcDisplay_u8DispInfo()  

#define  Diag_u16MixMotorFbAdValueDr        DCM_u16GetValue(DCM_nu16AdRawValueMixDr)// Rte_IRead_Diag_vMain_Diag_DcmMixMotorFbRawAdValueDr_u16AdValue()/*Interface OK,20160713*/
#define  Diag_u16MixMotorFbAdValuePs        DCM_u16GetValue(DCM_nu16AdRawValueMixPs)//Rte_IRead_Diag_vMain_Diag_DcmMixMotorFbRawAdValuePs_u16AdValue()/*Interface OK,20160713*/
#define  Diag_u16AirdMotorFbAdValue         DCM_u16GetValue(DCM_nu16AdRawValueAird)//Rte_IRead_Diag_vMain_Diag_DcmAirdMotorFbRawAdValue_u16AdValue()/*Interface OK,20160713*/
#define  Diag_u16RfaMotorFbAdValue          DCM_u16GetValue(DCM_nu16AdRawValueRfa)//te_IRead_Diag_vMain_Diag_DcmRfaMotorFbRawAdValue_u16AdValue()/*Interface OK,20160713*/
#define  Diag_u16SunValueDr                 (SUN_u16GetValue(SUN_nu16ValueDr))
#define  Diag_u16SunValuePs                 (SUN_u16GetValue(SUN_nu16ValuePs))
#define  Diag_u16AcccRequest                ACCC_u8GetValue(ACCC_nu8AcActualRequest)//Rte_IRead_Diag_vMain_Diag_AcccActualRequest_u8State()
#define  Diag_u8InCarAirQuanlityStatus      LINAPP_u16GetValue(LIN_nu16L_PM25_AirInQLevel)//Rte_IRead_Diag_vMain_Diag_LinAppAirInQLevel_u8IonAirQLevel()/*LINAPP not put RTE value,20160714*/
#define  Diag_u8OutSideAirQuanlityStatus    LINAPP_u16GetValue(LIN_nu16L_PM25_AirOutQLevel)//Rte_IRead_Diag_vMain_Diag_LinAppAirOutQLevel_u8IonAirQLevel()/*LINAPP not put RTE value,20160714*/
#define  Diag_u16InCarAirQuanlityValue      LINAPP_u16GetValue(LIN_nu16L_PM25_InDen)//Rte_IRead_Diag_vMain_Diag_LinAppPM25InDen_u16LinAppPM25Den()/*LINAPP not put RTE value,20160714*/
#define  Diag_u16OutSideAirQuanlityValue    LINAPP_u16GetValue(LIN_nu16L_PM25_OutDen)//Rte_IRead_Diag_vMain_Diag_LinAppPM25OutDen_u16LinAppPM25Den()/*LINAPP not put RTE value,20160714*/
#define  Diag_u16AQSAdvalue                 AQS_u16GetValue(AQS_nu16PwmValue)//Rte_IRead_Diag_vMain_Diag_AqsSensorAdValue_u16AdValue()/*Interface yes,but not so correct,20160713*/
#define  Diag_u16EvapSensorTemp             EVAP_u16GetValue(EVAP_nu16RawValue)//Rte_IRead_Diag_vMain_Diag_EvapSensorRawValue_u16Temp()/*Interface OK,20160713*/
#define  Diag_u16OatSensorTemp              OAT_u16GetValue(OAT_nu16Value)
#define  Diag_u16IctSensorTemp(u16Value)    CTS_enGetPcbTempExport(u16Value)//ICT_u16GetValue(ICT_nu16SensorValue)//Rte_IRead_Diag_vMain_Diag_IctSensorRawValue_u16Temp()/*Interface OK,20160713*/
#define  Diag_u16CoolantTempValid           CANAPP_u16GetValue(CANAPP_nu16EMS_EngineCoolantTemp)//Rte_IRead_Diag_vMain_Diag_CanAppEngWaterTempVD_u8Flag()/*Interface OK,20160713*/
#define  Diag_u16CoolantTemp                CANAPP_u16GetValue(CANAPP_nu16EMS_EngineCoolantTempInvalid)//Rte_IRead_Diag_vMain_Diag_CanAppEngWaterTemp_u8Temp()/*Interface OK,20160713*/
#define  Diag_u16EngSpd                     CANAPP_u16GetValue(CANAPP_nu16EMS_EngineSpeedRPM)//Rte_IRead_Diag_vMain_Diag_CanAppEngSpd_u16Speed()/*Interface OK,20160713*/
#define  Diag_u16EngSpdValid                CANAPP_u16GetValue(CANAPP_nu16EMS_EngineSpeedRPMInvalid)//Rte_IRead_Diag_vMain_Diag_CanAppEngSpdVd_u8Flag()/*Interface OK,20160713*/
#define  Diag_u16TelltalePWMDuty1           (0)//DIM_u16GetValue(DIM_nu16AcDuty)// Rte_IRead_Diag_vMain_Diag_DimLED1PWMValue_u16PwmDuty()/*Interface not OK,20160713*/
#define  Diag_u16TelltalePWMDuty2           (0)//DIM_u16GetValue(DIM_nu16AcDuty)//Rte_IRead_Diag_vMain_Diag_DimLED2PWMValue_u16PwmDuty()/*Interface not OK,20160713*/
#define  Diag_u16TelltalePWMDuty3           (0)//DIM_u16GetValue(DIM_nu16AcDuty)//Rte_IRead_Diag_vMain_Diag_DimLED3PWMValue_u16PwmDuty()/*Interface not OK,20160713*/
#define  Diag_u16LcdPWMDuty3                DIM_u16GetValue(DIM_nu16LcdPwmDuty)
#define  Diag_u16BatteyVoltage              POW_u16GetValue(POW_nu16ResultK30VoltFb)//Rte_IRead_Diag_vMain_Diag_PowK30ResultVoltFb_u16ResultVoltage() /*Interface OK,20160713*/
#define  Diag_u8IONCtrState                 (0)//MMI_u8GetValue(MMI_nu8IonCtrl)//Rte_IRead_Diag_vMain_Diag_MmiIonCtrl_u8Set()/*Interface not OK,20160713*/
#define  Diag_u8ClearAllDtc()               DTC_u8ClearAllDtc()//Rte_Call_Diag_DtcClearAllDtc_DtcClear()/*Interface OK,20160713*/

#define  Diag_u8ReadMaskFaultDtcNum(Req,Res,Num)    DTC_u8ReadMaskFaultDtcNum(Req,Res,Num)/*Interface not OK,20160713*/
#define  Diag_u8ReadMaskFaultDtcList(Req,Res,Num)   DTC_u8ReadMaskFaultDtcList(Req,Res,Num)/*Interface OK,20160713*/
#define  Diag_u8ReadSnapShotData(Req,Res,Num)       DTC_u8ReadSnapShotData(Req,Res,Num)/*Interface OK,20160713*/
#define  Diag_u8ReadSupportDtcList(Req,Res,Num)     DTC_u8ReadSupportDtcList(Req,Res,Num)/*Interface OK,20160713*/
#define  Diag_u8ReadDTCStatus(Res,Req)              DTC_u8ReadStatusByte(Res,Req)/*Interface OK,20160713*/

#define  Diag_u8ReadEEDData(Addr,Buffer,Len)        EED_u8ReadDataWait(Addr,Buffer,Len)    
#define  Diag_u8WriteEEDData(Addr,Buffer,Len)        EED_u8WriteDataWait(Addr,Buffer,Len)   

#define Diag_nu8SecureNrOfAttempts          Diag_u8Group1SecureNrOfAttempts


/*Programming DID addr 0xFF207000~0xFF2077FF,SECTOR_SA15_Start~SECTOR_SA15_End*/
#define ProgrammingCounterAddr              (0xFF207000UL)/*Should keep same with the bootloader*/
#define ProgrammingAttemptCounterAddr       (0xFF207040UL)/*Should keep same with the bootloader*/
#define RepairShopCodeOrTesterSNAddr        (0xFF207080UL)/*Should keep same with the bootloader*/
#define ProgrammingOrConfigurationDateAddr  (0xFF2070C0UL)/*Should keep same with the bootloader*/
#define ECUHardwareNumberAddr               (0xFF207100UL)/*Should keep same with the bootloader*/


#define ProgrammingCounterLen              (1U)/*Should keep same with the bootloader*/
#define ProgrammingAttemptCounterLen       (1U)/*Should keep same with the bootloader*/
#define RepairShopCodeOrTesterSNLen        (16U)/*Should keep same with the bootloader*/
#define ProgrammingOrConfigurationDateLen  (4U)/*Should keep same with the bootloader*/
#define ECUHardwareNumberLen               (16U)/*Should keep same with the bootloader*/

/*define in the ROM or Write to the DataFalsh*/
#define GeelySparePartNumber            (*(uint8*)0x0000BFF0UL)/*Should keep same with the bootloader*/
/*define in the CodeFalsh*/
#define BootSoftwareIdentification   (*(uint8*)0x0000BFE0UL)
#define BootSoftwareIdentificationLen    (16U)

#define StatusTestFail                  (0x01U)
#define Diag_SelfTestTimeCfg1            (220)/*22S*/
//#define Diag_SelfTestTimeCfg2            (50)/*5S*/


#define Diag_nSWVerSion                  (0xA4U)/*20160806*/


#endif /* __APPDESC_H__ */
